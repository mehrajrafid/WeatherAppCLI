# -*- coding: utf-8 -*-
"""weather_app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ujc0-0NA3LuPE0mB6SqsJZZ4qDkfxPEd
"""

import requests
import datetime
import sys

# Function to fetch weather data
def fetch_weather(lat, lon, api_key):
    base_url = "https://api.openweathermap.org/data/3.0/onecall"
    params = {
        "lat": lat,
        "lon": lon,
        "appid": api_key,
        "units": "metric",
        "exclude": "minutely,hourly",  # Only fetch current, daily, and alerts
    }
    response = requests.get(base_url, params=params)
    if response.status_code == 200:
        return response.json()
    else:
        print(f"Error: Unable to fetch weather data (Status Code: {response.status_code})")
        return None

# Function to display current weather
def display_current_weather(data):
    current = data["current"]
    weather_desc = current["weather"][0]["description"].capitalize()
    temp = current["temp"]
    feels_like = current["feels_like"]
    humidity = current["humidity"]
    wind_speed = current["wind_speed"]

    print("\n🌤 Current Weather:")
    print(f"   Condition: {weather_desc}")
    print(f"   Temperature: {temp}°C (Feels like {feels_like}°C)")
    print(f"   Humidity: {humidity}%")
    print(f"   Wind Speed: {wind_speed} m/s")

# Function to display daily summary
def display_daily_summary(data):
    daily = data["daily"][0]  # Today's weather
    summary = daily.get("summary", "No summary available")
    temp_day = daily["temp"]["day"]
    temp_min = daily["temp"]["min"]
    temp_max = daily["temp"]["max"]

    print("\n📅 Today's Weather Summary:")
    print(f"   {summary}")
    print(f"   Day Temperature: {temp_day}°C")
    print(f"   Min Temperature: {temp_min}°C")
    print(f"   Max Temperature: {temp_max}°C")

# Function to display alerts
def display_alerts(data):
    alerts = data.get("alerts", [])
    if alerts:
        print("\n⚠️ Weather Alerts:")
        for alert in alerts:
            event = alert["event"]
            description = alert["description"]
            start = datetime.datetime.fromtimestamp(alert["start"]).strftime('%Y-%m-%d %H:%M:%S')
            end = datetime.datetime.fromtimestamp(alert["end"]).strftime('%Y-%m-%d %H:%M:%S')
            print(f"   Event: {event}")
            print(f"   Start: {start}")
            print(f"   End: {end}")
            print(f"   Description: {description}")
    else:
        print("\n✅ No weather alerts.")

# Main function
if __name__ == "__main__":
    # Handle both Jupyter and CLI environments
    if "ipykernel_launcher" in sys.argv[0]:
        # Default values for Jupyter/Colab
        lat = 33.44
        lon = -94.04
        print("Running in Jupyter/Colab environment. Using default location (lat=33.44, lon=-94.04).")
    else:
        # If run as a script, take lat and lon from user input
        lat = float(input("Enter latitude: "))
        lon = float(input("Enter longitude: "))

    # Replace with your OpenWeather API key
    API_KEY = "YOUR_DUMMY_API_KEY"

    print("Fetching weather data...")
    weather_data = fetch_weather(lat, lon, API_KEY)

    if weather_data:
        display_current_weather(weather_data)
        display_daily_summary(weather_data)
        display_alerts(weather_data)